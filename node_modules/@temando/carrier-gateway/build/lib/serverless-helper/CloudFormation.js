'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bluebird = require('bluebird');

var _awsSdk = require('aws-sdk');

var _awsSdk2 = _interopRequireDefault(_awsSdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_awsSdk2.default.config.setPromisesDependency(require('bluebird')); /**
                                                                     * Retrieve CloudFormation information within a lambda.
                                                                     */


var cloudformation = new _awsSdk2.default.CloudFormation({
  apiVersion: '2010-05-15',
  region: process.env.SERVERLESS_REGION
});

var CloudFormationHelper = {
  loadVars: function () {
    var _ref = (0, _bluebird.coroutine)(function* () {
      try {
        if (!process.env.SERVERLESS_PROJECT_NAME || !process.env.SERVERLESS_STAGE || !process.env.SERVERLESS_REGION) {
          throw new Error('Serverless environment not set');
        }

        var stackName = `${process.env.SERVERLESS_PROJECT_NAME}-${process.env.SERVERLESS_STAGE}-r`;
        var stackDescription = yield undefined.describeCFStack(stackName);

        if (!(stackDescription.Outputs instanceof Array)) {
          throw new Error('No outputs in stack description');
        }

        stackDescription.Outputs.forEach(function (outVar) {
          process.env[`SERVERLESS_CF_${outVar.OutputKey}`] = outVar.OutputValue;
        });
      } catch (err) {
        throw err;
      }
    });

    return function loadVars() {
      return _ref.apply(this, arguments);
    };
  }(),

  describeCFStack: function () {
    var _ref2 = (0, _bluebird.coroutine)(function* (stackName) {
      try {
        var data = yield cloudformation.describeStacks({ StackName: stackName }).promise();

        if (!(data.Stacks instanceof Array) || data.Stacks.length === 0) {
          throw new Error('invalid response', data);
        }

        return data.Stacks[0];
      } catch (err) {
        throw err;
      }
    });

    return function describeCFStack(_x) {
      return _ref2.apply(this, arguments);
    };
  }()
};

exports.default = CloudFormationHelper;