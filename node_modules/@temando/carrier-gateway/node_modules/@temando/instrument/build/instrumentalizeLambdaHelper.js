'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = instrumentalizeLambdaHelper;

var _InstrumentGatewayClient = require('./InstrumentGatewayClient');

var _InstrumentGatewayClient2 = _interopRequireDefault(_InstrumentGatewayClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @deprecated This lib should not care about runtime environments.
 */
function instrumentalizeLambdaHelper(config, lambda) {
  // stuff from here till function returns are shared among aws lambda calls
  // in cases when booted lambda is reused (check freeze and thaw)

  // initalize instrument library
  const instrumentGatewayClient = new _InstrumentGatewayClient2.default(config);

  // wraps temando developer lambda for instrument gateway hooks
  return (event, context, callback) => lambda(event, instrumentGatewayClient, (err, val) => {
    // close any unterminated timers and flush data
    instrumentGatewayClient.close().flush();

    // for 4.3.2
    if (typeof callback === 'function') return callback(err, val);

    // for 0.10.42
    return context.done(err, val);
  });
}
module.exports = exports['default'];