'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Logs metrics to console as per the DataDog StatsD format.
 *
 * @see https://www.datadoghq.com/blog/statsd/
 *
 * e.g MONITORING|unix_epoch_timestamp|value|metric_type|my.metric.name|#tag1:value,tag2
 *
 * @param events
 */
class DatadogLogMetrics {
  constructor(events) {
    events.on('metric', metric => {
      let type;
      let value;

      if (typeof metric.increment !== 'undefined') {
        type = 'count';
        value = metric.increment;
      } else if (typeof metric.gauge !== 'undefined') {
        type = 'gauge';
        value = metric.gauge;
      } else {
        return; // don't support this metric type.
      }

      // DataDog doesn't like decimals.
      const timestamp = Math.floor(new Date(metric.occurredAt).getTime() / 1000);

      const msg = ['MONITORING', `${ timestamp }`, `${ value }`, type, `${ metric.name }`, `#origin:${ metric.origin }`];

      /* eslint-disable no-console */
      console.log(msg.join('|'));
      /* eslint-enable no-console */
    });
  }
}
exports.default = DatadogLogMetrics;
module.exports = exports['default'];