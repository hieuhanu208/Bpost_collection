"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var configuration_1 = require("../configuration");
exports.default = {
    $schema: 'http://json-schema.org/draft-04/schema#',
    id: configuration_1.default.prefix + "/address#",
    description: 'Address.',
    type: 'object',
    additionalProperties: false,
    required: [
        'countryCode',
    ],
    properties: {
        lines: {
            description: 'One or more address lines. For example:' +
                '\n- Street name and number' +
                '\n- Floor or suite number.',
            type: 'array',
            items: {
                type: 'string',
            },
        },
        countryCode: {
            $ref: configuration_1.default.prefix + "/country#",
        },
        postalCode: {
            type: 'string',
            description: 'Address postal code (for example, ZIP code or post code).',
        },
        locality: {
            type: 'string',
            description: 'Address locality. For example city or township.\n\nSome countries do not use this field and ' +
                'address lines are sufficient to locate the address within the administrative area.',
        },
        type: {
            type: 'string',
            description: 'The type of property at the address.',
            enum: [
                'business',
                'residential',
                'post-office-box',
                'collection-point',
            ],
        },
        dependentLocality: {
            type: 'string',
            description: 'Address dependent locality (neighbourhood).\n\nWhen representing a ' +
                'double-dependent locality in Great Britain, this includes both the double-dependent locality and ' +
                'the dependent locality,',
        },
        administrativeArea: {
            type: 'string',
            description: 'Address administrative area. For example, state or province.',
        },
        longitude: {
            type: 'number',
            description: 'The longitude value of a geo-coded address.',
            minimum: -180,
            maximum: 180,
        },
        latitude: {
            type: 'number',
            description: 'The latitude value of a geo-coded address.',
            minimum: -90,
            maximum: 90,
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2hlbWFzL2FkZHJlc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrREFBc0M7QUFFdEMsa0JBQWU7SUFDYixPQUFPLEVBQUUseUNBQXlDO0lBQ2xELEVBQUUsRUFBSyx1QkFBTSxDQUFDLE1BQU0sY0FBVztJQUMvQixXQUFXLEVBQUUsVUFBVTtJQUN2QixJQUFJLEVBQUUsUUFBUTtJQUNkLG9CQUFvQixFQUFFLEtBQUs7SUFDM0IsUUFBUSxFQUFFO1FBQ1IsYUFBYTtLQUNkO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsS0FBSyxFQUFFO1lBQ0wsV0FBVyxFQUFFLHlDQUF5QztnQkFDcEQsNEJBQTRCO2dCQUM1Qiw0QkFBNEI7WUFDOUIsSUFBSSxFQUFFLE9BQU87WUFDYixLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFLFFBQVE7YUFDZjtTQUNGO1FBQ0QsV0FBVyxFQUFFO1lBQ1gsSUFBSSxFQUFLLHVCQUFNLENBQUMsTUFBTSxjQUFXO1NBQ2xDO1FBQ0QsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLFFBQVE7WUFDZCxXQUFXLEVBQUUsMkRBQTJEO1NBQ3pFO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsSUFBSSxFQUFFLFFBQVE7WUFDZCxXQUFXLEVBQUUsOEZBQThGO2dCQUN6RyxvRkFBb0Y7U0FDdkY7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsUUFBUTtZQUNkLFdBQVcsRUFBRSxzQ0FBc0M7WUFDbkQsSUFBSSxFQUFFO2dCQUNKLFVBQVU7Z0JBQ1YsYUFBYTtnQkFDYixpQkFBaUI7Z0JBQ2pCLGtCQUFrQjthQUNuQjtTQUNGO1FBQ0QsaUJBQWlCLEVBQUU7WUFDakIsSUFBSSxFQUFFLFFBQVE7WUFDZCxXQUFXLEVBQUUscUVBQXFFO2dCQUNoRixtR0FBbUc7Z0JBQ25HLHlCQUF5QjtTQUM1QjtRQUNELGtCQUFrQixFQUFFO1lBQ2xCLElBQUksRUFBRSxRQUFRO1lBQ2QsV0FBVyxFQUFFLDhEQUE4RDtTQUM1RTtRQUNELFNBQVMsRUFBRTtZQUNULElBQUksRUFBRSxRQUFRO1lBQ2QsV0FBVyxFQUFFLDZDQUE2QztZQUMxRCxPQUFPLEVBQUUsQ0FBQyxHQUFHO1lBQ2IsT0FBTyxFQUFFLEdBQUc7U0FDYjtRQUNELFFBQVEsRUFBRTtZQUNSLElBQUksRUFBRSxRQUFRO1lBQ2QsV0FBVyxFQUFFLDRDQUE0QztZQUN6RCxPQUFPLEVBQUUsQ0FBQyxFQUFFO1lBQ1osT0FBTyxFQUFFLEVBQUU7U0FDWjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlndXJhdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgJHNjaGVtYTogJ2h0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDQvc2NoZW1hIycsXG4gIGlkOiBgJHtjb25maWcucHJlZml4fS9hZGRyZXNzI2AsXG4gIGRlc2NyaXB0aW9uOiAnQWRkcmVzcy4nLFxuICB0eXBlOiAnb2JqZWN0JyxcbiAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGZhbHNlLFxuICByZXF1aXJlZDogW1xuICAgICdjb3VudHJ5Q29kZScsXG4gIF0sXG4gIHByb3BlcnRpZXM6IHtcbiAgICBsaW5lczoge1xuICAgICAgZGVzY3JpcHRpb246ICdPbmUgb3IgbW9yZSBhZGRyZXNzIGxpbmVzLiBGb3IgZXhhbXBsZTonICtcbiAgICAgICAgJ1xcbi0gU3RyZWV0IG5hbWUgYW5kIG51bWJlcicgK1xuICAgICAgICAnXFxuLSBGbG9vciBvciBzdWl0ZSBudW1iZXIuJyxcbiAgICAgIHR5cGU6ICdhcnJheScsXG4gICAgICBpdGVtczoge1xuICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBjb3VudHJ5Q29kZToge1xuICAgICAgJHJlZjogYCR7Y29uZmlnLnByZWZpeH0vY291bnRyeSNgLFxuICAgIH0sXG4gICAgcG9zdGFsQ29kZToge1xuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICBkZXNjcmlwdGlvbjogJ0FkZHJlc3MgcG9zdGFsIGNvZGUgKGZvciBleGFtcGxlLCBaSVAgY29kZSBvciBwb3N0IGNvZGUpLicsXG4gICAgfSxcbiAgICBsb2NhbGl0eToge1xuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICBkZXNjcmlwdGlvbjogJ0FkZHJlc3MgbG9jYWxpdHkuIEZvciBleGFtcGxlIGNpdHkgb3IgdG93bnNoaXAuXFxuXFxuU29tZSBjb3VudHJpZXMgZG8gbm90IHVzZSB0aGlzIGZpZWxkIGFuZCAnICtcbiAgICAgICAgJ2FkZHJlc3MgbGluZXMgYXJlIHN1ZmZpY2llbnQgdG8gbG9jYXRlIHRoZSBhZGRyZXNzIHdpdGhpbiB0aGUgYWRtaW5pc3RyYXRpdmUgYXJlYS4nLFxuICAgIH0sXG4gICAgdHlwZToge1xuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICBkZXNjcmlwdGlvbjogJ1RoZSB0eXBlIG9mIHByb3BlcnR5IGF0IHRoZSBhZGRyZXNzLicsXG4gICAgICBlbnVtOiBbXG4gICAgICAgICdidXNpbmVzcycsXG4gICAgICAgICdyZXNpZGVudGlhbCcsXG4gICAgICAgICdwb3N0LW9mZmljZS1ib3gnLFxuICAgICAgICAnY29sbGVjdGlvbi1wb2ludCcsXG4gICAgICBdLFxuICAgIH0sXG4gICAgZGVwZW5kZW50TG9jYWxpdHk6IHtcbiAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgZGVzY3JpcHRpb246ICdBZGRyZXNzIGRlcGVuZGVudCBsb2NhbGl0eSAobmVpZ2hib3VyaG9vZCkuXFxuXFxuV2hlbiByZXByZXNlbnRpbmcgYSAnICtcbiAgICAgICAgJ2RvdWJsZS1kZXBlbmRlbnQgbG9jYWxpdHkgaW4gR3JlYXQgQnJpdGFpbiwgdGhpcyBpbmNsdWRlcyBib3RoIHRoZSBkb3VibGUtZGVwZW5kZW50IGxvY2FsaXR5IGFuZCAnICtcbiAgICAgICAgJ3RoZSBkZXBlbmRlbnQgbG9jYWxpdHksJyxcbiAgICB9LFxuICAgIGFkbWluaXN0cmF0aXZlQXJlYToge1xuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICBkZXNjcmlwdGlvbjogJ0FkZHJlc3MgYWRtaW5pc3RyYXRpdmUgYXJlYS4gRm9yIGV4YW1wbGUsIHN0YXRlIG9yIHByb3ZpbmNlLicsXG4gICAgfSxcbiAgICBsb25naXR1ZGU6IHtcbiAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgZGVzY3JpcHRpb246ICdUaGUgbG9uZ2l0dWRlIHZhbHVlIG9mIGEgZ2VvLWNvZGVkIGFkZHJlc3MuJyxcbiAgICAgIG1pbmltdW06IC0xODAsXG4gICAgICBtYXhpbXVtOiAxODAsXG4gICAgfSxcbiAgICBsYXRpdHVkZToge1xuICAgICAgdHlwZTogJ251bWJlcicsXG4gICAgICBkZXNjcmlwdGlvbjogJ1RoZSBsYXRpdHVkZSB2YWx1ZSBvZiBhIGdlby1jb2RlZCBhZGRyZXNzLicsXG4gICAgICBtaW5pbXVtOiAtOTAsXG4gICAgICBtYXhpbXVtOiA5MCxcbiAgICB9LFxuICB9LFxufTtcbiJdfQ==