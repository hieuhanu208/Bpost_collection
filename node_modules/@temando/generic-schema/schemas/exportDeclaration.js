"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var configuration_1 = require("../configuration");
exports.default = {
    $schema: 'http://json-schema.org/draft-04/schema#',
    id: configuration_1.default.prefix + "/exportDeclaration#",
    description: 'Shipment export declaration.',
    type: 'object',
    additionalProperties: false,
    properties: {
        signatory: {
            description: 'Shipment\'s export declaration signatory.',
            $ref: configuration_1.default.prefix + "/entity#",
        },
        exportReason: {
            description: 'Description of reason for export.',
            type: 'string',
        },
        exportCategory: {
            description: 'Category of export. For example, commercial, documents, gift, or other.',
            type: 'string',
        },
        exportCodes: {
            type: 'object',
            description: 'Export codes associated with the shipment.',
            properties: {
                exportDeclarationNumber: {
                    type: 'string',
                    description: 'Export Declaration Number (EDN) for exports originating from Australia.',
                    minLength: 0,
                },
                exemptionExclusionLegend: {
                    type: 'string',
                    description: 'Exemption Exclusion Legend (EEL) for exports originating from the United States.',
                    minLength: 0,
                },
                electronicExportInformation: {
                    type: 'string',
                    description: 'Electronic Export Information (EEI), formerly known as Shipper\'s ' +
                        'Export Declaration (SED), for exports originating from the United States.',
                    minLength: 0,
                },
                internalTransactionNumber: {
                    type: 'string',
                    description: 'Internal Transaction Number (ITN) for exports originating from the United States.' +
                        'A generated number confirming that the EEI was accepted and is on file.',
                    minLength: 0,
                },
            },
        },
        declaredValue: {
            $ref: configuration_1.default.prefix + "/money#",
        },
        descriptionOfGoods: {
            description: 'Description of goods being shipped.',
            type: 'string',
        },
        incoterm: {
            description: 'Applicable trade term. Valid terms are from Incoterm 2010 rules.',
            enum: [
                'EXW',
                'FCA',
                'FAS',
                'FOB',
                'CPT',
                'CFR',
                'CIF',
                'CIP',
                'DAT',
                'DAP',
                'DDP',
            ],
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3J0RGVjbGFyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2NoZW1hcy9leHBvcnREZWNsYXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQUFzQztBQUV0QyxrQkFBZTtJQUNiLE9BQU8sRUFBRSx5Q0FBeUM7SUFDbEQsRUFBRSxFQUFLLHVCQUFNLENBQUMsTUFBTSx3QkFBcUI7SUFDekMsV0FBVyxFQUFFLDhCQUE4QjtJQUMzQyxJQUFJLEVBQUUsUUFBUTtJQUNkLG9CQUFvQixFQUFFLEtBQUs7SUFDM0IsVUFBVSxFQUFFO1FBQ1YsU0FBUyxFQUFFO1lBQ1QsV0FBVyxFQUFFLDJDQUEyQztZQUN4RCxJQUFJLEVBQUssdUJBQU0sQ0FBQyxNQUFNLGFBQVU7U0FDakM7UUFDRCxZQUFZLEVBQUU7WUFDWixXQUFXLEVBQUUsbUNBQW1DO1lBQ2hELElBQUksRUFBRSxRQUFRO1NBQ2Y7UUFDRCxjQUFjLEVBQUU7WUFDZCxXQUFXLEVBQUUseUVBQXlFO1lBQ3RGLElBQUksRUFBRSxRQUFRO1NBQ2Y7UUFDRCxXQUFXLEVBQUU7WUFDWCxJQUFJLEVBQUUsUUFBUTtZQUNkLFdBQVcsRUFBRSw0Q0FBNEM7WUFDekQsVUFBVSxFQUFFO2dCQUNWLHVCQUF1QixFQUFFO29CQUN2QixJQUFJLEVBQUUsUUFBUTtvQkFDZCxXQUFXLEVBQUUseUVBQXlFO29CQUN0RixTQUFTLEVBQUUsQ0FBQztpQkFDYjtnQkFDRCx3QkFBd0IsRUFBRTtvQkFDeEIsSUFBSSxFQUFFLFFBQVE7b0JBQ2QsV0FBVyxFQUFFLGtGQUFrRjtvQkFDL0YsU0FBUyxFQUFFLENBQUM7aUJBQ2I7Z0JBQ0QsMkJBQTJCLEVBQUU7b0JBQzNCLElBQUksRUFBRSxRQUFRO29CQUNkLFdBQVcsRUFBRSxvRUFBb0U7d0JBQy9FLDJFQUEyRTtvQkFDN0UsU0FBUyxFQUFFLENBQUM7aUJBQ2I7Z0JBQ0QseUJBQXlCLEVBQUU7b0JBQ3pCLElBQUksRUFBRSxRQUFRO29CQUNkLFdBQVcsRUFBRSxtRkFBbUY7d0JBQzlGLHlFQUF5RTtvQkFDM0UsU0FBUyxFQUFFLENBQUM7aUJBQ2I7YUFDRjtTQUNGO1FBQ0QsYUFBYSxFQUFFO1lBQ2IsSUFBSSxFQUFLLHVCQUFNLENBQUMsTUFBTSxZQUFTO1NBQ2hDO1FBQ0Qsa0JBQWtCLEVBQUU7WUFDbEIsV0FBVyxFQUFFLHFDQUFxQztZQUNsRCxJQUFJLEVBQUUsUUFBUTtTQUNmO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsV0FBVyxFQUFFLGtFQUFrRTtZQUMvRSxJQUFJLEVBQUU7Z0JBQ0osS0FBSztnQkFDTCxLQUFLO2dCQUNMLEtBQUs7Z0JBQ0wsS0FBSztnQkFDTCxLQUFLO2dCQUNMLEtBQUs7Z0JBQ0wsS0FBSztnQkFDTCxLQUFLO2dCQUNMLEtBQUs7Z0JBQ0wsS0FBSztnQkFDTCxLQUFLO2FBQ047U0FDRjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlndXJhdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgJHNjaGVtYTogJ2h0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDQvc2NoZW1hIycsXG4gIGlkOiBgJHtjb25maWcucHJlZml4fS9leHBvcnREZWNsYXJhdGlvbiNgLFxuICBkZXNjcmlwdGlvbjogJ1NoaXBtZW50IGV4cG9ydCBkZWNsYXJhdGlvbi4nLFxuICB0eXBlOiAnb2JqZWN0JyxcbiAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGZhbHNlLFxuICBwcm9wZXJ0aWVzOiB7XG4gICAgc2lnbmF0b3J5OiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ1NoaXBtZW50XFwncyBleHBvcnQgZGVjbGFyYXRpb24gc2lnbmF0b3J5LicsXG4gICAgICAkcmVmOiBgJHtjb25maWcucHJlZml4fS9lbnRpdHkjYCxcbiAgICB9LFxuICAgIGV4cG9ydFJlYXNvbjoge1xuICAgICAgZGVzY3JpcHRpb246ICdEZXNjcmlwdGlvbiBvZiByZWFzb24gZm9yIGV4cG9ydC4nLFxuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgfSxcbiAgICBleHBvcnRDYXRlZ29yeToge1xuICAgICAgZGVzY3JpcHRpb246ICdDYXRlZ29yeSBvZiBleHBvcnQuIEZvciBleGFtcGxlLCBjb21tZXJjaWFsLCBkb2N1bWVudHMsIGdpZnQsIG9yIG90aGVyLicsXG4gICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICB9LFxuICAgIGV4cG9ydENvZGVzOiB7XG4gICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnRXhwb3J0IGNvZGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgc2hpcG1lbnQuJyxcbiAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgZXhwb3J0RGVjbGFyYXRpb25OdW1iZXI6IHtcbiAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ0V4cG9ydCBEZWNsYXJhdGlvbiBOdW1iZXIgKEVETikgZm9yIGV4cG9ydHMgb3JpZ2luYXRpbmcgZnJvbSBBdXN0cmFsaWEuJyxcbiAgICAgICAgICBtaW5MZW5ndGg6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGV4ZW1wdGlvbkV4Y2x1c2lvbkxlZ2VuZDoge1xuICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnRXhlbXB0aW9uIEV4Y2x1c2lvbiBMZWdlbmQgKEVFTCkgZm9yIGV4cG9ydHMgb3JpZ2luYXRpbmcgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcy4nLFxuICAgICAgICAgIG1pbkxlbmd0aDogMCxcbiAgICAgICAgfSxcbiAgICAgICAgZWxlY3Ryb25pY0V4cG9ydEluZm9ybWF0aW9uOiB7XG4gICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgZGVzY3JpcHRpb246ICdFbGVjdHJvbmljIEV4cG9ydCBJbmZvcm1hdGlvbiAoRUVJKSwgZm9ybWVybHkga25vd24gYXMgU2hpcHBlclxcJ3MgJyArXG4gICAgICAgICAgICAnRXhwb3J0IERlY2xhcmF0aW9uIChTRUQpLCBmb3IgZXhwb3J0cyBvcmlnaW5hdGluZyBmcm9tIHRoZSBVbml0ZWQgU3RhdGVzLicsXG4gICAgICAgICAgbWluTGVuZ3RoOiAwLFxuICAgICAgICB9LFxuICAgICAgICBpbnRlcm5hbFRyYW5zYWN0aW9uTnVtYmVyOiB7XG4gICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgZGVzY3JpcHRpb246ICdJbnRlcm5hbCBUcmFuc2FjdGlvbiBOdW1iZXIgKElUTikgZm9yIGV4cG9ydHMgb3JpZ2luYXRpbmcgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcy4nICtcbiAgICAgICAgICAgICdBIGdlbmVyYXRlZCBudW1iZXIgY29uZmlybWluZyB0aGF0IHRoZSBFRUkgd2FzIGFjY2VwdGVkIGFuZCBpcyBvbiBmaWxlLicsXG4gICAgICAgICAgbWluTGVuZ3RoOiAwLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlY2xhcmVkVmFsdWU6IHtcbiAgICAgICRyZWY6IGAke2NvbmZpZy5wcmVmaXh9L21vbmV5I2AsXG4gICAgfSxcbiAgICBkZXNjcmlwdGlvbk9mR29vZHM6IHtcbiAgICAgIGRlc2NyaXB0aW9uOiAnRGVzY3JpcHRpb24gb2YgZ29vZHMgYmVpbmcgc2hpcHBlZC4nLFxuICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgfSxcbiAgICBpbmNvdGVybToge1xuICAgICAgZGVzY3JpcHRpb246ICdBcHBsaWNhYmxlIHRyYWRlIHRlcm0uIFZhbGlkIHRlcm1zIGFyZSBmcm9tIEluY290ZXJtIDIwMTAgcnVsZXMuJyxcbiAgICAgIGVudW06IFtcbiAgICAgICAgJ0VYVycsXG4gICAgICAgICdGQ0EnLFxuICAgICAgICAnRkFTJyxcbiAgICAgICAgJ0ZPQicsXG4gICAgICAgICdDUFQnLFxuICAgICAgICAnQ0ZSJyxcbiAgICAgICAgJ0NJRicsXG4gICAgICAgICdDSVAnLFxuICAgICAgICAnREFUJyxcbiAgICAgICAgJ0RBUCcsXG4gICAgICAgICdERFAnLFxuICAgICAgXSxcbiAgICB9LFxuICB9LFxufTtcbiJdfQ==