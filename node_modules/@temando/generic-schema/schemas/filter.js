"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var configuration_1 = require("../configuration");
exports.default = {
    $schema: 'http://json-schema.org/draft-04/schema#',
    id: configuration_1.default.prefix + "/filter",
    description: 'Filtering equation for listing resources.',
    type: 'array',
    items: {
        type: 'object',
        required: [
            'path',
            'operator',
            'value',
        ],
        properties: {
            path: {
                description: 'Valid JSON pointer to the document type to filter on relative to the `/data/attributes/` path from a ' +
                    'standard response. For example, given a response with `/data/attributes/origin/address/countryCode` the path ' +
                    'is `origin/address/countryCode`.',
                type: 'string',
                pattern: /^\/[\x00-\x7F]*[a-zA-Z0-9]$/.source,
            },
            operator: {
                description: 'Equation operator.',
                type: 'string',
                enum: [
                    'equal',
                    'notEqual',
                    'greaterThan',
                    'lessThan',
                    'greaterThanOrEqual',
                    'lessThanOrEqual',
                    'in',
                    'notIn',
                    'beginsWith',
                    'exists',
                    'contains',
                    'doesNotContain',
                ],
            },
            value: {
                description: 'Filter value. Forms the right operand of a filter equation.',
                type: [
                    'string',
                    'array',
                    'boolean',
                    'number',
                    'null',
                ],
                minLength: 1,
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NjaGVtYXMvZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0RBQXNDO0FBRXRDLGtCQUFlO0lBQ2IsT0FBTyxFQUFFLHlDQUF5QztJQUNsRCxFQUFFLEVBQUssdUJBQU0sQ0FBQyxNQUFNLFlBQVM7SUFDN0IsV0FBVyxFQUFFLDJDQUEyQztJQUN4RCxJQUFJLEVBQUUsT0FBTztJQUNiLEtBQUssRUFBRTtRQUNMLElBQUksRUFBRSxRQUFRO1FBQ2QsUUFBUSxFQUFFO1lBQ1IsTUFBTTtZQUNOLFVBQVU7WUFDVixPQUFPO1NBQ1I7UUFDRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUU7Z0JBQ0osV0FBVyxFQUFFLHVHQUF1RztvQkFDbEgsK0dBQStHO29CQUMvRyxrQ0FBa0M7Z0JBQ3BDLElBQUksRUFBRSxRQUFRO2dCQUNkLE9BQU8sRUFBRSw2QkFBNkIsQ0FBQyxNQUFNO2FBQzlDO1lBQ0QsUUFBUSxFQUFFO2dCQUNSLFdBQVcsRUFBRSxvQkFBb0I7Z0JBQ2pDLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRTtvQkFDSixPQUFPO29CQUNQLFVBQVU7b0JBQ1YsYUFBYTtvQkFDYixVQUFVO29CQUNWLG9CQUFvQjtvQkFDcEIsaUJBQWlCO29CQUNqQixJQUFJO29CQUNKLE9BQU87b0JBQ1AsWUFBWTtvQkFDWixRQUFRO29CQUNSLFVBQVU7b0JBQ1YsZ0JBQWdCO2lCQUNqQjthQUNGO1lBQ0QsS0FBSyxFQUFFO2dCQUNMLFdBQVcsRUFBRSw2REFBNkQ7Z0JBQzFFLElBQUksRUFBRTtvQkFDSixRQUFRO29CQUNSLE9BQU87b0JBQ1AsU0FBUztvQkFDVCxRQUFRO29CQUNSLE1BQU07aUJBQ1A7Z0JBQ0QsU0FBUyxFQUFFLENBQUM7YUFDYjtTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWd1cmF0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAkc2NoZW1hOiAnaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNC9zY2hlbWEjJyxcbiAgaWQ6IGAke2NvbmZpZy5wcmVmaXh9L2ZpbHRlcmAsXG4gIGRlc2NyaXB0aW9uOiAnRmlsdGVyaW5nIGVxdWF0aW9uIGZvciBsaXN0aW5nIHJlc291cmNlcy4nLFxuICB0eXBlOiAnYXJyYXknLFxuICBpdGVtczoge1xuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHJlcXVpcmVkOiBbXG4gICAgICAncGF0aCcsXG4gICAgICAnb3BlcmF0b3InLFxuICAgICAgJ3ZhbHVlJyxcbiAgICBdLFxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHBhdGg6IHtcbiAgICAgICAgZGVzY3JpcHRpb246ICdWYWxpZCBKU09OIHBvaW50ZXIgdG8gdGhlIGRvY3VtZW50IHR5cGUgdG8gZmlsdGVyIG9uIHJlbGF0aXZlIHRvIHRoZSBgL2RhdGEvYXR0cmlidXRlcy9gIHBhdGggZnJvbSBhICcgK1xuICAgICAgICAgICdzdGFuZGFyZCByZXNwb25zZS4gRm9yIGV4YW1wbGUsIGdpdmVuIGEgcmVzcG9uc2Ugd2l0aCBgL2RhdGEvYXR0cmlidXRlcy9vcmlnaW4vYWRkcmVzcy9jb3VudHJ5Q29kZWAgdGhlIHBhdGggJyArXG4gICAgICAgICAgJ2lzIGBvcmlnaW4vYWRkcmVzcy9jb3VudHJ5Q29kZWAuJyxcbiAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgIHBhdHRlcm46IC9eXFwvW1xceDAwLVxceDdGXSpbYS16QS1aMC05XSQvLnNvdXJjZSxcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjoge1xuICAgICAgICBkZXNjcmlwdGlvbjogJ0VxdWF0aW9uIG9wZXJhdG9yLicsXG4gICAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgICBlbnVtOiBbXG4gICAgICAgICAgJ2VxdWFsJyxcbiAgICAgICAgICAnbm90RXF1YWwnLFxuICAgICAgICAgICdncmVhdGVyVGhhbicsXG4gICAgICAgICAgJ2xlc3NUaGFuJyxcbiAgICAgICAgICAnZ3JlYXRlclRoYW5PckVxdWFsJyxcbiAgICAgICAgICAnbGVzc1RoYW5PckVxdWFsJyxcbiAgICAgICAgICAnaW4nLFxuICAgICAgICAgICdub3RJbicsXG4gICAgICAgICAgJ2JlZ2luc1dpdGgnLFxuICAgICAgICAgICdleGlzdHMnLFxuICAgICAgICAgICdjb250YWlucycsXG4gICAgICAgICAgJ2RvZXNOb3RDb250YWluJyxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgICB2YWx1ZToge1xuICAgICAgICBkZXNjcmlwdGlvbjogJ0ZpbHRlciB2YWx1ZS4gRm9ybXMgdGhlIHJpZ2h0IG9wZXJhbmQgb2YgYSBmaWx0ZXIgZXF1YXRpb24uJyxcbiAgICAgICAgdHlwZTogW1xuICAgICAgICAgICdzdHJpbmcnLFxuICAgICAgICAgICdhcnJheScsXG4gICAgICAgICAgJ2Jvb2xlYW4nLFxuICAgICAgICAgICdudW1iZXInLFxuICAgICAgICAgICdudWxsJyxcbiAgICAgICAgXSxcbiAgICAgICAgbWluTGVuZ3RoOiAxLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufTtcbiJdfQ==