declare const _default: {
    address: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            lines: {
                description: string;
                type: string;
                items: {
                    type: string;
                };
            };
            countryCode: {
                $ref: string;
            };
            postalCode: {
                type: string;
                description: string;
            };
            locality: {
                type: string;
                description: string;
            };
            type: {
                type: string;
                description: string;
                enum: string[];
            };
            dependentLocality: {
                type: string;
                description: string;
            };
            administrativeArea: {
                type: string;
                description: string;
            };
            longitude: {
                type: string;
                description: string;
                minimum: number;
                maximum: number;
            };
            latitude: {
                type: string;
                description: string;
                minimum: number;
                maximum: number;
            };
        };
    };
    capabilities: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            authorityToLeave: {
                $ref: string;
            };
            signature: {
                $ref: string;
            };
        };
        definitions: {
            authorityToLeave: {
                description: string;
                type: string;
                properties: {
                    required: {
                        type: string;
                    };
                };
            };
            signatureOnDelivery: {
                description: string;
                type: string;
                required: string[];
                properties: {
                    required: {
                        type: string;
                    };
                    onlyAdultCanSign: {
                        type: string;
                    };
                    onlyAddresseeCanSign: {
                        type: string;
                    };
                };
            };
        };
    };
    country: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        enum: string[];
    };
    dateRange: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            description: {
                description: string;
                type: string;
            };
            from: {
                description: string;
                type: string;
                format: string;
            };
            to: {
                description: string;
                type: string;
                format: string;
            };
        };
    };
    dimensions: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            length: {
                type: string;
                minimum: number;
            };
            width: {
                type: string;
                minimum: number;
            };
            height: {
                type: string;
                minimum: number;
            };
            unit: {
                description: string;
                type: string;
                enum: string[];
            };
        };
    };
    document: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        required: string[];
        properties: {
            size: {
                $ref: string;
            };
            type: {
                $ref: string;
            };
            mimeType: {
                description: string;
                $ref: string;
                enum: string[];
            };
            url: {
                description: string;
                type: string;
                format: string;
            };
            data: {
                description: string;
                type: string;
            };
            encoding: {
                $ref: string;
            };
        };
    };
    documentSize: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        enum: string[];
    };
    documentType: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        enum: string[];
    };
    encoding: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        enum: string[];
    };
    entity: {
        id: string;
        $schema: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            organisationName: {
                type: string;
                description: string;
            };
            personTitle: {
                type: string;
                description: string;
            };
            personFirstName: {
                type: string;
                description: string;
            };
            personLastName: {
                type: string;
                description: string;
            };
            email: {
                type: string;
                description: string;
                format: string;
            };
            phoneNumber: {
                type: string;
                description: string;
            };
            secondaryPhoneNumber: {
                type: string;
                description: string;
            };
            mobilePhoneNumber: {
                type: string;
                description: string;
            };
            faxNumber: {
                type: string;
                description: string;
            };
            nationalIdentificationNumber: {
                type: string;
                description: string;
            };
            taxIdentificationNumber: {
                type: string;
                description: string;
            };
        };
    };
    experience: {
        description: string;
        $schema: string;
        id: string;
        additionalProperties: boolean;
        type: string;
        required: string[];
        properties: {
            code: {
                type: string;
                description: string;
            };
            costs: {
                type: string;
                items: {
                    description: string;
                    $ref: string;
                };
            };
            descriptions: {
                type: string;
                items: {
                    description: string;
                    $ref: string;
                };
            };
        };
        definitions: {
            description: {
                type: string;
                required: string[];
                properties: {
                    locale: {
                        type: string;
                        description: string;
                    };
                    text: {
                        type: string;
                        description: string;
                    };
                };
            };
        };
    };
    exportCategory: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        enum: string[];
    };
    exportDeclaration: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            signatory: {
                description: string;
                $ref: string;
            };
            exportReason: {
                description: string;
                type: string;
            };
            exportCategory: {
                description: string;
                type: string;
            };
            exportCodes: {
                type: string;
                description: string;
                properties: {
                    exportDeclarationNumber: {
                        type: string;
                        description: string;
                        minLength: number;
                    };
                    exemptionExclusionLegend: {
                        type: string;
                        description: string;
                        minLength: number;
                    };
                    electronicExportInformation: {
                        type: string;
                        description: string;
                        minLength: number;
                    };
                    internalTransactionNumber: {
                        type: string;
                        description: string;
                        minLength: number;
                    };
                };
            };
            declaredValue: {
                $ref: string;
            };
            descriptionOfGoods: {
                description: string;
                type: string;
            };
            incoterm: {
                description: string;
                enum: string[];
            };
        };
    };
    filter: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        items: {
            type: string;
            required: string[];
            properties: {
                path: {
                    description: string;
                    type: string;
                    pattern: string;
                };
                operator: {
                    description: string;
                    type: string;
                    enum: string[];
                };
                value: {
                    description: string;
                    type: string[];
                    minLength: number;
                };
            };
        };
    };
    fulfillmentType: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        enum: string[];
    };
    item: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            product: {
                $ref: string;
            };
            quantity: {
                type: string;
                minimum: number;
            };
        };
    };
    jsonApiErrors: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            errors: {
                type: string;
                items: {
                    description: string;
                    type: string;
                    properties: {
                        id: {
                            description: string;
                            type: string;
                        };
                        status: {
                            description: string;
                            type: string;
                        };
                        title: {
                            description: string;
                            type: string;
                        };
                        detail: {
                            description: string;
                            type: string;
                        };
                        meta: {
                            description: string;
                            type: string;
                        };
                        code: {
                            description: string;
                            type: string;
                        };
                        links: {
                            description: string;
                            type: string;
                        };
                        source: {
                            description: string;
                            type: string;
                        };
                    };
                };
            };
        };
    };
    keyValueObject: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        maxProperties: number;
        additionalProperties: {
            type: string[];
        };
    };
    location: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            type: {
                description: string;
                type: string;
                enum: string[];
            };
            name: {
                description: string;
                type: string;
            };
            address: {
                description: string;
                $ref: string;
            };
            contact: {
                description: string;
                $ref: string;
            };
            openingHours: {
                description: string;
                $ref: string;
            };
        };
    };
    mimeType: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        enum: string[];
    };
    money: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            amount: {
                description: string;
                type: string;
            };
            currency: {
                description: string;
                type: string;
                maxLength: number;
                minLength: number;
            };
        };
    };
    openingHours: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        required: string[];
        properties: {
            default: {
                type: string;
                items: {
                    description: string;
                    $ref: string;
                };
            };
            exceptions: {
                description: string;
                additionalProperties: boolean;
                type: string;
                properties: {
                    closures: {
                        description: string;
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    openings: {
                        description: string;
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                };
            };
        };
        definitions: {
            dailyOpeningHours: {
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    closes: {
                        $ref: string;
                    };
                    dayOfWeek: {
                        description: string;
                        type: string;
                        enum: string[];
                    };
                    opens: {
                        $ref: string;
                    };
                };
            };
        };
    };
    package: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            id: {
                type: string;
                description: string;
            };
            type: {
                description: string;
                $ref: string;
            };
            grossWeight: {
                $ref: string;
            };
            dimensions: {
                $ref: string;
            };
            remainingSpace: {
                type: string;
                description: string;
                required: string[];
                properties: {
                    volume: {
                        $ref: string;
                    };
                };
            };
            items: {
                type: string;
                items: {
                    $ref: string;
                };
            };
            trackingReference: {
                type: string;
                description: string;
            };
            trackingUrl: {
                description: string;
                type: string;
                format: string;
            };
            documentation: {
                type: string;
                items: {
                    $ref: string;
                };
            };
        };
    };
    packagingType: {
        $schema: string;
        id: string;
        description: string;
        additionalProperties: boolean;
        type: string;
        enum: string[];
    };
    product: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        properties: {
            sku: {
                type: string;
                description: string;
                maxLength: number;
            };
            category: {
                type: string;
                description: string;
            };
            description: {
                type: string;
                description: string;
                maxLength: number;
            };
            unit: {
                description: string;
                type: string;
            };
            dimensions: {
                $ref: string;
            };
            weight: {
                $ref: string;
            };
            monetaryValue: {
                $ref: string;
            };
            isFragile: {
                description: string;
                type: string;
                default: boolean;
            };
            origin: {
                $ref: string;
            };
            manufacture: {
                $ref: string;
            };
            classificationCodes: {
                type: string;
                description: string;
                properties: {
                    eccn: {
                        type: string;
                        description: string;
                        minLength: number;
                        maxLength: number;
                    };
                    scheduleBInfo: {
                        type: string;
                        description: string;
                        minLength: number;
                        maxLength: number;
                    };
                    hsCode: {
                        type: string;
                        description: string;
                        minLength: number;
                        maxLength: number;
                    };
                };
            };
        };
        definitions: {
            productLocation: {
                type: string;
                properties: {
                    address: {
                        type: string;
                        required: string[];
                        properties: {
                            countryCode: {
                                $ref: string;
                            };
                        };
                    };
                };
            };
        };
    };
    qualification: {
        description: string;
        $schema: string;
        id: string;
        additionalProperties: boolean;
        type: string;
        items: {
            $ref: string;
        };
    };
    quoteIneligible: any;
    quoteEligible: any;
    quoteError: any;
    quoteSet: {
        id: string;
        description: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            ineligible: {
                type: string;
                items: {
                    $ref: any;
                };
            };
            eligible: {
                type: string;
                items: {
                    $ref: any;
                };
            };
            errors: {
                type: string;
                items: {
                    $ref: any;
                };
            };
        };
    };
    shipment: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        required: string[];
        properties: {
            pickupAt: {
                type: string;
                description: string;
                format: string;
            };
            isDutiable: {
                description: string;
                type: string;
            };
            isPaperless: {
                description: string;
                type: string;
            };
            origin: {
                $ref: string;
            };
            destination: {
                $ref: string;
            };
            finalRecipient: {
                $ref: string;
            };
            packages: {
                type: string;
                items: {
                    $ref: string;
                };
            };
            documentation: {
                type: string;
                items: {
                    $ref: string;
                };
            };
            instructionsToDeliveryAgent: {
                type: string;
            };
            insuredAmount: {
                $ref: string;
            };
            capabilities: {
                $ref: string;
            };
            exportDeclaration: {
                $ref: string;
            };
            order: {
                type: string;
                description: string;
                properties: {
                    reference: {
                        description: string;
                        type: string;
                    };
                    customerReference: {
                        description: string;
                        type: string;
                    };
                    invoiceId: {
                        description: string;
                        type: string;
                    };
                    invoiceDate: {
                        description: string;
                        type: string;
                        format: string;
                    };
                };
            };
        };
    };
    time: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        pattern: string;
    };
    timeDuration: {
        $schema: string;
        id: string;
        description: string;
        type: string;
        pattern: string;
    };
    uuid: {
        $schema: string;
        description: string;
        id: string;
        type: string;
        pattern: string;
    };
    volume: {
        $schema: string;
        description: string;
        id: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            value: {
                description: string;
                type: string;
            };
            unit: {
                description: string;
                enum: string[];
            };
        };
    };
    weight: {
        $schema: string;
        description: string;
        id: string;
        type: string;
        additionalProperties: boolean;
        required: string[];
        properties: {
            value: {
                description: string;
                type: string;
            };
            unit: {
                description: string;
                enum: string[];
            };
        };
    };
    zone: {
        $schema: string;
        description: string;
        id: string;
        type: string;
        properties: {
            name: {
                description: string;
                type: string;
            };
            type: {
                description: string;
                type: string;
            };
            points: {
                description: string;
                type: string;
                items: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
        };
        required: string[];
    };
};
export default _default;
