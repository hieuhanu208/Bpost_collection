"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var configuration_1 = require("../configuration");
var dimensions_1 = require("./dimensions");
var document_1 = require("./document");
var item_1 = require("./item");
var packagingType_1 = require("./packagingType");
var volume_1 = require("./volume");
var weight_1 = require("./weight");
exports.default = {
    $schema: 'http://json-schema.org/draft-04/schema#',
    id: configuration_1.default.prefix + "/package#",
    description: 'Package.',
    type: 'object',
    additionalProperties: false,
    required: ['id', 'grossWeight', 'dimensions'],
    properties: {
        id: {
            type: 'string',
            description: 'Unique identifier for package.',
        },
        type: {
            description: 'Package type.',
            $ref: packagingType_1.default.id,
        },
        grossWeight: {
            $ref: weight_1.default.id,
        },
        dimensions: {
            $ref: dimensions_1.default.id,
        },
        remainingSpace: {
            type: 'object',
            description: 'Unused space within packed package.',
            required: ['volume'],
            properties: {
                volume: {
                    $ref: volume_1.default.id,
                },
            },
        },
        items: {
            type: 'array',
            items: {
                $ref: item_1.default.id,
            },
        },
        trackingReference: {
            type: 'string',
            description: 'Per-package tracking reference. Typically supplied by carrier.',
        },
        trackingUrl: {
            description: 'URL provided for tracking individual packages.',
            type: 'string',
            format: 'uri',
        },
        documentation: {
            type: 'array',
            items: {
                $ref: document_1.default.id,
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFja2FnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2hlbWFzL3BhY2thZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrREFBc0M7QUFDdEMsMkNBQXNDO0FBQ3RDLHVDQUFrQztBQUNsQywrQkFBMEI7QUFDMUIsaURBQTRDO0FBQzVDLG1DQUE4QjtBQUM5QixtQ0FBOEI7QUFFOUIsa0JBQWU7SUFDYixPQUFPLEVBQUUseUNBQXlDO0lBQ2xELEVBQUUsRUFBSyx1QkFBTSxDQUFDLE1BQU0sY0FBVztJQUMvQixXQUFXLEVBQUUsVUFBVTtJQUN2QixJQUFJLEVBQUUsUUFBUTtJQUNkLG9CQUFvQixFQUFFLEtBQUs7SUFDM0IsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLGFBQWEsRUFBRSxZQUFZLENBQUM7SUFDN0MsVUFBVSxFQUFFO1FBQ1YsRUFBRSxFQUFFO1lBQ0YsSUFBSSxFQUFFLFFBQVE7WUFDZCxXQUFXLEVBQUUsZ0NBQWdDO1NBQzlDO1FBQ0QsSUFBSSxFQUFFO1lBQ0osV0FBVyxFQUFFLGVBQWU7WUFDNUIsSUFBSSxFQUFFLHVCQUFhLENBQUMsRUFBRTtTQUN2QjtRQUNELFdBQVcsRUFBRTtZQUNYLElBQUksRUFBRSxnQkFBTSxDQUFDLEVBQUU7U0FDaEI7UUFDRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsb0JBQVUsQ0FBQyxFQUFFO1NBQ3BCO1FBQ0QsY0FBYyxFQUFFO1lBQ2QsSUFBSSxFQUFFLFFBQVE7WUFDZCxXQUFXLEVBQUUscUNBQXFDO1lBQ2xELFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUNwQixVQUFVLEVBQUU7Z0JBQ1YsTUFBTSxFQUFFO29CQUNOLElBQUksRUFBRSxnQkFBTSxDQUFDLEVBQUU7aUJBQ2hCO2FBQ0Y7U0FDRjtRQUNELEtBQUssRUFBRTtZQUNMLElBQUksRUFBRSxPQUFPO1lBQ2IsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRSxjQUFJLENBQUMsRUFBRTthQUNkO1NBQ0Y7UUFDRCxpQkFBaUIsRUFBRTtZQUNqQixJQUFJLEVBQUUsUUFBUTtZQUNkLFdBQVcsRUFBRSxnRUFBZ0U7U0FDOUU7UUFDRCxXQUFXLEVBQUU7WUFDWCxXQUFXLEVBQUUsZ0RBQWdEO1lBQzdELElBQUksRUFBRSxRQUFRO1lBQ2QsTUFBTSxFQUFFLEtBQUs7U0FDZDtRQUNELGFBQWEsRUFBRTtZQUNiLElBQUksRUFBRSxPQUFPO1lBQ2IsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRSxrQkFBUSxDQUFDLEVBQUU7YUFDbEI7U0FDRjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlndXJhdGlvbic7XG5pbXBvcnQgZGltZW5zaW9ucyBmcm9tICcuL2RpbWVuc2lvbnMnO1xuaW1wb3J0IGRvY3VtZW50IGZyb20gJy4vZG9jdW1lbnQnO1xuaW1wb3J0IGl0ZW0gZnJvbSAnLi9pdGVtJztcbmltcG9ydCBwYWNrYWdpbmdUeXBlIGZyb20gJy4vcGFja2FnaW5nVHlwZSc7XG5pbXBvcnQgdm9sdW1lIGZyb20gJy4vdm9sdW1lJztcbmltcG9ydCB3ZWlnaHQgZnJvbSAnLi93ZWlnaHQnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICRzY2hlbWE6ICdodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA0L3NjaGVtYSMnLFxuICBpZDogYCR7Y29uZmlnLnByZWZpeH0vcGFja2FnZSNgLFxuICBkZXNjcmlwdGlvbjogJ1BhY2thZ2UuJyxcbiAgdHlwZTogJ29iamVjdCcsXG4gIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZSxcbiAgcmVxdWlyZWQ6IFsnaWQnLCAnZ3Jvc3NXZWlnaHQnLCAnZGltZW5zaW9ucyddLFxuICBwcm9wZXJ0aWVzOiB7XG4gICAgaWQ6IHtcbiAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgZGVzY3JpcHRpb246ICdVbmlxdWUgaWRlbnRpZmllciBmb3IgcGFja2FnZS4nLFxuICAgIH0sXG4gICAgdHlwZToge1xuICAgICAgZGVzY3JpcHRpb246ICdQYWNrYWdlIHR5cGUuJyxcbiAgICAgICRyZWY6IHBhY2thZ2luZ1R5cGUuaWQsXG4gICAgfSxcbiAgICBncm9zc1dlaWdodDoge1xuICAgICAgJHJlZjogd2VpZ2h0LmlkLFxuICAgIH0sXG4gICAgZGltZW5zaW9uczoge1xuICAgICAgJHJlZjogZGltZW5zaW9ucy5pZCxcbiAgICB9LFxuICAgIHJlbWFpbmluZ1NwYWNlOiB7XG4gICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnVW51c2VkIHNwYWNlIHdpdGhpbiBwYWNrZWQgcGFja2FnZS4nLFxuICAgICAgcmVxdWlyZWQ6IFsndm9sdW1lJ10sXG4gICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIHZvbHVtZToge1xuICAgICAgICAgICRyZWY6IHZvbHVtZS5pZCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBpdGVtczoge1xuICAgICAgdHlwZTogJ2FycmF5JyxcbiAgICAgIGl0ZW1zOiB7XG4gICAgICAgICRyZWY6IGl0ZW0uaWQsXG4gICAgICB9LFxuICAgIH0sXG4gICAgdHJhY2tpbmdSZWZlcmVuY2U6IHtcbiAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgZGVzY3JpcHRpb246ICdQZXItcGFja2FnZSB0cmFja2luZyByZWZlcmVuY2UuIFR5cGljYWxseSBzdXBwbGllZCBieSBjYXJyaWVyLicsXG4gICAgfSxcbiAgICB0cmFja2luZ1VybDoge1xuICAgICAgZGVzY3JpcHRpb246ICdVUkwgcHJvdmlkZWQgZm9yIHRyYWNraW5nIGluZGl2aWR1YWwgcGFja2FnZXMuJyxcbiAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgZm9ybWF0OiAndXJpJyxcbiAgICB9LFxuICAgIGRvY3VtZW50YXRpb246IHtcbiAgICAgIHR5cGU6ICdhcnJheScsXG4gICAgICBpdGVtczoge1xuICAgICAgICAkcmVmOiBkb2N1bWVudC5pZCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn07XG4iXX0=