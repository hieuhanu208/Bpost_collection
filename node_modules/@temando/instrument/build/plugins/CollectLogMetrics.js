'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getOwnPropertyNames = require('babel-runtime/core-js/object/get-own-property-names');

var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * When logs are flushed, this plugin counts logs and then places them in as metrics.
 */
class CollectLogMetrics {
  constructor(events, instrumentation) {
    events.on('flushLogs', logs => {
      const metrics = {
        total: 0,
        levels: {}
      };

      logs.forEach(log => {
        metrics.total += 1;
        if (typeof metrics.levels[log.level] === 'undefined') {
          metrics.levels[log.level] = 0;
        }
        metrics.levels[log.level] += 1;
      });

      if (metrics.total > 0) {
        instrumentation.count('logs', metrics.total);
        (0, _getOwnPropertyNames2.default)(metrics.levels).forEach(level => {
          instrumentation.count(`logs.${ level }`, metrics.levels[level]);
        });
      }
    });
  }
}
exports.default = CollectLogMetrics;
module.exports = exports['default'];
