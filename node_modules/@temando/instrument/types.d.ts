export declare type IMetricType = 'count' | 'gauge' | 'histogram' | 'timing';
export declare type ILogLevel = 'emergency' | 'alert' | 'critical' | 'error' | 'warning' | 'notice' | 'info' | 'debug';
export interface ITags {
    [key: string]: string | number;
}
export interface IContext {
    [key: string]: any;
}
export interface IBaseArgs {
    context?: IContext;
    tags?: ITags;
}
export interface ILogArgs extends IBaseArgs {
    level: ILogLevel;
    message: string;
}
export interface IMetricArgs extends IBaseArgs {
    type: IMetricType;
    name: string;
    value: any;
}
export interface ICountArgs extends IBaseArgs {
    name: string;
    value?: number;
}
export interface IGaugeArgs extends IBaseArgs {
    name: string;
    value: number;
}
export interface IHistogramArgs extends IBaseArgs {
    name: string;
    value: number;
}
export interface ITimingArgs extends IBaseArgs {
    name: string;
    /** A timing in microseconds (Î¼s). */
    value: number | ITimer;
}
export interface ITimer {
    start: [number, number];
}
export interface IData {
    origin: string;
    context: IContext;
    occurredAt: string;
}
export interface ILogData extends IData {
    message: string;
    level: ILogLevel;
}
export interface IMetricData extends IData {
    name: string;
    increment?: number;
    gauge?: number;
    histogram?: number;
}
