import chai from 'chai';
import packageMate from './index';

const expect = chai.expect;
const fixture = {
  grossWeight: {
    amount: 100,
    unit: 'g',
  },
  dimensions: {
    length: 10,
    width: 10,
    height: 10,
    unit: 'cm',
  },
};

describe('Package class', () => {
  it('can return packages correctly', (done) => {
    const pkg = packageMate(fixture);

    expect(pkg).to.have.property('dimensions');
    expect(pkg).to.have.property('grossWeight');
    expect(pkg.dimensions).to.deep.equal(fixture.dimensions);
    expect(pkg.grossWeight).to.deep.equal(fixture.grossWeight);
    done();
  });

  it('can normalise dimensions correctly', (done) => {
    const pkg = packageMate(fixture);

    pkg.normaliseDimensions('m');

    expect(pkg.dimensions.length).to.equal(0.1);
    expect(pkg.dimensions.width).to.equal(0.1);
    expect(pkg.dimensions.height).to.equal(0.1);
    expect(pkg.dimensions.unit).to.equal('m');
    done();
  });

  it('can normalise weight correctly', (done) => {
    const pkg = packageMate(fixture);

    pkg.normaliseWeight('kg');

    expect(pkg.grossWeight.amount).to.equal(0.1);
    expect(pkg.grossWeight.unit).to.equal('kg');
    done();
  });

  it('can normalise dimensions correctly when dimensions unit is uppercase', (done) => {
    const clone = JSON.parse(JSON.stringify(fixture));

    clone.dimensions.unit = 'CM';

    const pkg = packageMate(clone);

    pkg.normaliseDimensions('m');

    expect(pkg.dimensions.length).to.equal(0.1);
    expect(pkg.dimensions.width).to.equal(0.1);
    expect(pkg.dimensions.height).to.equal(0.1);
    expect(pkg.dimensions.unit).to.equal('m');
    done();
  });

  it('can normalise weight correctly when weight unit is uppercase', (done) => {
    const clone = JSON.parse(JSON.stringify(fixture));

    clone.grossWeight.unit = 'G';

    const pkg = packageMate(fixture);

    pkg.normaliseWeight('kg');

    expect(pkg.grossWeight.amount).to.equal(0.1);
    expect(pkg.grossWeight.unit).to.equal('kg');
    done();
  });
});
