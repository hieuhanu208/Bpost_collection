"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const publish_1 = require("./publish");
class TemandoCarrierService {
    constructor(serverless) {
        this.commands = {
            'carrier-service': {
                commands: {
                    publish: {
                        lifecycleEvents: [
                            'serverless',
                        ],
                        usage: 'Publish to Carrier Service',
                        options: {
                            stage: {
                                usage: 'Optional if only one stage is defined in project',
                                shortcut: 's',
                            },
                            region: {
                                usage: 'Target one region to deploy to',
                                shortcut: 'r',
                            },
                        },
                    },
                },
            },
        };
        this.publishAction = () => __awaiter(this, void 0, void 0, function* () {
            const { provider: { stage, region } } = this.serverless.service;
            if (stage === null || region === null) {
                throw new Error('Please supply the stage and region with the -s and -r parameters');
            }
            this.log(`Using Stage ${stage}, Region: ${region}`);
            return publish_1.publish(region, stage, this.log);
        });
        this.serverless = serverless;
        this.hooks = {
            'carrier-service:publish:serverless': this.publishAction,
        };
        this.log = console.log; // eslint-disable-line no-console
    }
}
module.exports = TemandoCarrierService;
//# sourceMappingURL=TemandoCarrierService-1.0.js.map