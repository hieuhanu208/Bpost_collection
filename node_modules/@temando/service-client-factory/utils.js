"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const yaml = require("js-yaml");
const DependencyError_1 = require("./errors/DependencyError");
/**
 * Get & decorate a ts-definition
 */
function getServiceDefinition(input) {
    const definition = (() => {
        if (input instanceof Object) {
            return input;
        }
        const filePath = `${process.cwd()}/${input}`;
        try {
            return yaml.safeLoad(fs.readFileSync(filePath, { encoding: 'utf8' }));
        }
        catch (err) {
            throw new DependencyError_1.DependencyError(`Could not open service dependencies file - ${filePath}`);
        }
    })();
    definition.$schema = 'http://service-registry.temando.com/schema/service-definition+v1#';
    return definition;
}
exports.getServiceDefinition = getServiceDefinition;
/**
 * Get & decorate a ts-env
 */
function getServiceEnv(input) {
    const environment = (() => {
        if (input instanceof Object) {
            return input;
        }
        const filePath = `${process.cwd()}/${input}`;
        try {
            return yaml.safeLoad(fs.readFileSync(filePath, { encoding: 'utf8' }));
        }
        catch (err) {
            throw new DependencyError_1.DependencyError(`Could not open service environment variables file - ${filePath}`);
        }
    })();
    environment.$schema = 'http://service-registry.temando.com/schema/service-env+v1#';
    return environment;
}
exports.getServiceEnv = getServiceEnv;
/**
 * Maps known sovereigns to allowed AWS regions.
 *
 * This will eventually be driven by config, or from some other data store.
 */
exports.SovereigntyMap = {
    global: {
        AwsRegions: [
            // EU
            'eu-west-1',
            'eu-west-2',
            'eu-central-1',
            // US
            'us-east-1',
            'us-east-2',
            'us-west-1',
            'us-west-2',
            // Canada
            'ca-central-1',
            // Asia-Pacific
            'ap-southeast-1',
            'ap-northeast-1',
            'ap-northeast-2',
            'ap-south-1',
            // Australia
            'ap-southeast-2',
            // South America
            'sa-east-1',
        ],
    },
    eu: {
        AwsRegions: [
            'eu-west-1',
            'eu-west-2',
            'eu-central-1',
        ],
    },
    asia: {
        AwsRegions: [
            'ap-southeast-1',
            'ap-northeast-1',
            'ap-northeast-2',
            'ap-south-1',
        ],
    },
    au: {
        AwsRegions: [
            'ap-southeast-2',
        ],
    },
    us: {
        AwsRegions: [
            'us-east-1',
            'us-east-2',
            'us-west-1',
            'us-west-2',
        ],
    },
    test: {
        AwsRegions: [
            'fakeregion',
        ],
    },
};
//# sourceMappingURL=utils.js.map