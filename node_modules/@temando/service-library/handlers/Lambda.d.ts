import { IMiddlewareInterface } from '../framework/MiddlewareInterface';
import { IInputLambdaEvent, ILambdaEvent, ILambdaHandler, ILambdaResponse } from '../types';
export { IMiddlewareInterface };
export declare type ILambdaEventNames = ('event' | 'event.end' | 'lambda.request' | 'lambda.response' | 'handler.request' | 'handler.response');
export interface ILambdaEventSignatures<O> {
    (key: ILambdaEventNames, callback: (event: ILambdaEvent) => any, options?: O): any;
}
/**
 * @constructor LambdaHandler
 *
 * Lambda generic request & response normalizer
 */
export declare function Lambda(handler: ILambdaHandler<ILambdaEvent, ILambdaResponse>): IMiddlewareInterface<IInputLambdaEvent, any, (err: any, response?: any) => any>;
