"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Ajv = require("ajv");
const pointer = require("json-pointer");
const filter_fields_config_schema_v1_1 = require("../schema/filter-fields-config-schema+v1");
const SchemaValidator_1 = require("../schema/SchemaValidator");
const schema = new Ajv();
schema.addSchema(filter_fields_config_schema_v1_1.default, 'filterFields');
const validate = SchemaValidator_1.SchemaValidator(schema);
/**
 * Given a document object and a valid filter fields config, generate a list of
 * key value pairs that can be passed to storage as part of the `Attributes`
 * list to be indexed.
 */
function generateSearchableIndexes(config) {
    const { document, filterFieldsConfig } = config;
    validate('filterFields', filterFieldsConfig);
    const searchableIndexes = {};
    for (const key of Object.keys(filterFieldsConfig)) {
        const attributesPath = filterFieldsConfig[key].mappedPath;
        const valueAtPath = pointer.has(document, key) ? pointer.get(document, key) : false;
        if (valueAtPath) {
            const parsedMappedPath = pointer.parse(attributesPath).pop();
            searchableIndexes[parsedMappedPath] = valueAtPath;
        }
    }
    return searchableIndexes;
}
exports.generateSearchableIndexes = generateSearchableIndexes;
//# sourceMappingURL=generateSearchableIndexes.js.map