"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const storage_library_1 = require("@temando/storage-library");
/**
 * This middleware attaches an instance of Storage Library to the event.
 * Note that tsDefinition and tsEnv are only required if the Instrumentation
 * middleware is not being used, as Instrumentation middleware already adds
 * serviceClientFactory to the event.
 */
function AddStorageLibrary() {
    return (m) => {
        m.declare('storage.ready');
        m.on('serviceClientFactory.ready', (event) => {
            const { serviceClientFactory } = event;
            event.storage = new storage_library_1.StorageLibrary({
                serviceClient: serviceClientFactory.create({ name: 'storage-v2' }),
            });
            if (event.instrumentation) {
                const serviceId = `${serviceClientFactory.tsDefinition.id}`;
                const readEvents = ['exists', 'get', 'batchGet', 'list', 'search', 'listV2', 'searchV2'];
                const writeEvents = ['create', 'update', 'patch'];
                const deleteEvents = ['delete'];
                for (const readEvent of readEvents) {
                    event.storage.on(`${readEvent}.end`, (res) => {
                        event.instrumentation.count(`${serviceId}-storage-read-calls`, 1, res);
                    });
                }
                for (const writeEvent of writeEvents) {
                    event.storage.on(`${writeEvent}.end`, (res) => {
                        event.instrumentation.count(`${serviceId}-storage-write-calls`, 1, res);
                    });
                }
                for (const deleteEvent of deleteEvents) {
                    event.storage.on(`${deleteEvent}.end`, (res) => {
                        event.instrumentation.count(`${serviceId}-storage-delete-calls`, 1, res);
                    });
                }
            }
            return m.emit('storage.ready', event);
        });
    };
}
exports.AddStorageLibrary = AddStorageLibrary;
//# sourceMappingURL=AddStorageLibrary.js.map