import { Mediator } from '../framework/Mediator';
import { ILambdaHttpEvent } from '../types';
import { IInstrumentationEvent } from './Instrumentation';
export declare type IBillingEvent = ILambdaHttpEvent & IInstrumentationEvent;
export interface IBillingParams {
    /** A name, for logging purposes - typically the function name */
    name?: string;
    /** Expected to return a Instrumentation context object */
    context?: (event: IBillingEvent) => {
        [key: string]: any;
    };
}
export declare function Billing({name, context}?: IBillingParams): (m: Mediator) => void;
