import { Mediator } from '../framework/Mediator';
import { ILambdaHttpEvent } from '../types';
export interface IHttpParams {
    /** Used to select the callId, via `request.headers[callHeader]` */
    callHeader?: string;
}
export declare type IHttpMwEventNames = 'http.request' | 'http.response';
export interface IHttpMwEventSignatures<O> {
    (key: IHttpMwEventNames, callback: (event: ILambdaHttpEvent) => any, options?: O): any;
}
export declare function prepareHttpRequest({callHeader, event}: {
    callHeader?: string;
    event: any;
}): void;
/**
 * Http middleware
 *
 * Integrates with:
 * - `LambdaHttp` handler
 */
export declare function Http({callHeader}?: IHttpParams): (m: Mediator) => void;
