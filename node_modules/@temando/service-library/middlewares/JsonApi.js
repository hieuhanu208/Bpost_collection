"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../errors");
/**
 * JsonApi middleware
 *
 * Intercepts http events to mutate the request or response to follow
 * the JSON API standard.
 *
 * @see http://jsonapi.org/format/1.0/
 *
 * Integrates with:
 * - `Http` middleware
 */
function JsonApi({ logErrors = true } = {}) {
    return (m) => {
        m.on('http.request', (event) => {
            const { request: { headers }, } = event;
            const accept = headers.accept || '';
            const contentType = headers['content-type'] || '';
            // Ensure media types conform to JSON API
            const isBadMediaType = ((accept && accept.indexOf('application/vnd.api+json') === -1) ||
                contentType.indexOf('application/vnd.api+json') === -1);
            if (isBadMediaType) {
                throw new errors_1.UnsupportedError({
                    title: 'Unsupported media types',
                    detail: 'Expected `application/vnd.api+json` Accept or Content-Type headers',
                });
            }
        });
        m.on('http.response.prepare::before', (event) => {
            const { error } = event;
            if (error && !(error instanceof errors_1.JsonApiError)) {
                if (logErrors) {
                    console.error(error.stack || error);
                } // eslint-disable-line
                event.error = new errors_1.JsonApiError(error);
            }
        });
        m.on('http.response', ({ response }) => {
            response.headers['content-type'] = 'application/vnd.api+json';
        });
    };
}
exports.JsonApi = JsonApi;
//# sourceMappingURL=JsonApi.js.map