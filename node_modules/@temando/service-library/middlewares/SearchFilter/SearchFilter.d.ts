import { Mediator } from '../../framework/Mediator';
export declare type FilterOperator = 'equal' | 'notEqual' | 'greaterThan' | 'lessThan' | 'greaterThanOrEqual' | 'lessThanOrEqual' | 'in' | 'notIn' | 'beginsWith' | 'exists' | 'contains' | 'doesNotContain';
export interface IFilterFieldsConfig {
    [key: string]: {
        mappedPath: string;
        supportedOperators: FilterOperator[];
    };
}
export interface IFilterField {
    path: string;
    operator: FilterOperator;
    value: any;
}
export declare function SearchFilter({filterFieldsConfig, callback}?: {
    filterFieldsConfig?: IFilterFieldsConfig;
    callback?: any;
}): (m: Mediator) => void;
