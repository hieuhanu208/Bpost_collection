"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Joi = require("joi");
/**
 * Parses arguments between two patterns:
 *   - arg1, arg2, arg3
 *   - { arg1, arg2, arg3 }
 */
function parseArguments(args, keys) {
    if (args[0] !== null && args[0] instanceof Object) {
        return args[0];
    }
    else {
        return keys.reduce((obj, key, index) => {
            obj[key] = args[index];
            return obj;
        }, {});
    }
}
exports.parseArguments = parseArguments;
/**
 * Joi validates a given payload
 */
function validate(payload, schema) {
    const result = Joi.validate(payload, schema);
    if (result.error) {
        throw result.error;
    }
    return result;
}
exports.validate = validate;
/**
 * hrtime to microseconds
 *
 * It will also always round up to nearest Î¼s.
 *
 * Not milliseconds (thousandth), but microseconds (millionth).
 *
 * https://en.wikipedia.org/wiki/Orders_of_magnitude_(time)
 */
function hrTimeToMicroseconds(hrtime) {
    return Math.ceil((hrtime[0] * 1000000) + (hrtime[1] / 1000));
}
exports.hrTimeToMicroseconds = hrTimeToMicroseconds;
/**
 * Check if it is a HR timer sort of.
 *
 * @param timing
 * @returns {boolean}
 */
function isTimer(timing) {
    return timing.start !== undefined;
}
exports.isTimer = isTimer;
//# sourceMappingURL=index.js.map