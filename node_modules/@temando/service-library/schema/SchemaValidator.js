"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../errors");
/**
 * @constructor
 *
 * Create a validator function to wrap AjvSchema and output a standard error.
 * Expects `ajvSchema.addSchema()` pattern.
 *
 * @example
 *
 * const validator = SchemaValidator(ajvSchema);
 * validator('some-schema-key', payload); // May throw ValidationError
 * validator('some-schema-key', payload); // May throw ValidationError
 *
 */
function SchemaValidator(schema) {
    function Validate(key, payloadArg) {
        const validator = (payload) => {
            if (payload == null) {
                throw new errors_1.ValidationError({ detail: `Invalid payload against schema ${key}` });
            }
            const isValid = schema.validate(key, payload);
            if (!isValid) {
                const errors = [...schema.errors];
                const detail = schema.errorsText(errors);
                throw new errors_1.ValidationError({ detail, meta: { validation: errors } });
            }
            return isValid;
        };
        if (payloadArg == null) {
            return validator;
        }
        return validator(payloadArg);
    }
    return Validate;
}
exports.SchemaValidator = SchemaValidator;
//# sourceMappingURL=SchemaValidator.js.map