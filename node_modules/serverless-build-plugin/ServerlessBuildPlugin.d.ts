import { IPluginConfig } from './config';
import { FileBuild } from './FileBuild';
import { Logger } from './lib/Logger';
export declare class ServerlessBuildPlugin {
    config: IPluginConfig;
    serverless: any;
    servicePath: string;
    tmpDir: string;
    buildTmpDir: string;
    artifactTmpDir: string;
    functions: any;
    hooks: any;
    fileBuild: FileBuild;
    logger: Logger;
    constructor(serverless: any, options?: {});
    /**
     *  Builds either from file or through babel
     */
    build: () => Promise<void>;
    /**
     * Builds a function into an streaming zip artifact
     * and sets it in `serverless.yml:functions[fnName].artifact`
     * in order for `serverless` to consume it.
     */
    buildFunction(fnName: any, fnConfig: any): Promise<any>;
    /**
     *  Writes the `artifact` and attaches it to serverless
     */
    private completeFunctionArtifact(fnName, artifact);
    /**
     * Mutates `packageFunction` on the `Package` serverless built-in plugin
     * in order to intercept
     */
    private overridePackagePlugin;
}
