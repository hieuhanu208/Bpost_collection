/// <reference types="archiver" />
import { Archiver } from 'archiver';
/**
 * Read any of:
 * - .json
 * - .yml / .yaml
 * - .js
 *
 * @param {String} fileLookup
 * @returns {any} config
 */
export declare function loadFile(fileLookup: any): any;
/**
 *  Normalizes transforming and zip allocation for walked files.
 *  Used by SourceBundler & ModuleBundler.
 */
export declare function handleFile({filePath, relPath, archive, useSourceMaps, transformExtensions, transforms}: {
    archive: Archiver;
    useSourceMaps: boolean;
    transformExtensions: string[];
    filePath: string;
    relPath: string;
    transforms: any[];
}): Promise<Archiver>;
export declare function displayModule({filePath, packageJson}: {
    filePath: string;
    packageJson?: any;
}): string;
export declare function colorizeConfig(config: any): string;
